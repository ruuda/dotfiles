theme = "nightfox"

[editor]
auto-save = true
rulers = [81, 101]
text-width = 80
bufferline = "multiple"
completion-timeout = 5
trim-trailing-whitespace = true

[editor.indent-guides]
render = true
skip-levels = 0

[editor.auto-pairs]
# Auto-close these pairs only, and no others, especially not strings.
"(" = ")"
"[" = "]"
"{" = "}"

[editor.statusline]
right = [
  "diagnostics",
  "version-control",
  "spacer",
  "primary-selection-length",
  "register",
  "position",
  "file-encoding",
]

[editor.file-picker]
# Do not ignore hidden files.
# (The option is badly named, see https://github.com/helix-editor/helix/issues/6926.)
hidden = false

[keys.normal."\\"]
w = ":write"
x = ":write-quit"

# Helix already has `<space>f` for the file picker, but in Vim I use `\f`, so
# this makes the two more uniform.
f = "file_picker"

# In Vim, reflow is `gq`. We could do the same in Helix, but `\` is easier to
# type than, and `r` makes more sense anyway, so I'm going for `\r`, and I'll
# map the same in Vim.
r = ":reflow"

# Shorthand for sorting the selected lines.
s = ["split_selection_on_newline", ":sort"]

[keys.normal.g]
# With the bufferline enabled, Helix looks like it has tabs. We can cycle
# through buffers with gn and gp, but my Vim muscle memory uses gt and gT,
# so bind those too.
t = "goto_next_buffer"
T = "goto_previous_buffer"

[keys.normal]
# Enable shrinking a selection with Shift+X, the inverse of just x.
X = "select_line_above"

[keys.select]
X = "select_line_above"

[keys.insert]
# Make Ctrl+N trigger completion, like it does in Vim. But then when completion
# opens because we triggered it, the first entry is not always highlighted.
# Unfortunately we can't currently trigger selecting the first entry by mapping
# it to another Ctrl+N, as there is no mappable command for the autocomplete
# menu.
C-n = "completion"
